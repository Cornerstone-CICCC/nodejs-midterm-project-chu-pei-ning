---
import Layout from "../layouts/Layout.astro"
import "../scss/globle.scss"
import "../scss/history.scss"
---
<Layout>
  <div class="history-page">
    <h1 class="text-style">Your Diary History</h1>
    <div id="history-container"></div>
    <button class="back-btn"><a href="/daily">Back</a></button>  
  </div>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    await loadDiaries();
  });

  async function loadDiaries() {
    try {
      const res = await fetch("http://localhost:4000/diary");
      if (!res.ok) throw new Error("Failed to fetch diaries");
      const data = await res.json();
      
      const container = document.getElementById("history-container");
      if (!container) return;

      container.innerHTML = "";

      data.forEach((entry:any) => {
        const diaryEntry = document.createElement("div");
        diaryEntry.classList.add("diary-entry");
        diaryEntry.innerHTML = `
          <div class="diary-box">
            <h3>${entry.date}</h3>
            <div class="d-container">
              <p><strong>Weather:</strong> ${entry.weather}</p>
              <p><strong>Mood:</strong> ${entry.mood}</p>
              <p><strong>Content:</strong><br/> ${entry.content}</p>
            </div>
            <div class="d-btn">
                <button type="button" class="edit-diary-btn" data-id="${entry.id}" data-text="${entry.content}">Edit</button>
                <button type="button" class="delete-diary-btn" data-id="${entry.id}">Delete</button>
            </div>
          </div>  
        `;

        container.appendChild(diaryEntry);

        document.querySelectorAll(".edit-diary-btn").forEach((btn) => {
        btn.addEventListener("click", (event) => {
          const target = event.target as HTMLButtonElement;
          const id = target.getAttribute("data-id");
          const text = target.getAttribute("data-text");
          if (id) editDiary(id, text!);
          });
        });

        document.querySelectorAll(".delete-diary-btn").forEach((btn) => {
        btn.addEventListener("click", (event) => {
        const target = event.target as HTMLButtonElement;
        const id = target.getAttribute("data-id")
        if (id) deleteDiary(id);
        });
      });
      });

    } catch (error) {
      console.error("Error fetching diaries:", error);
    }
  }

  async function editDiary(id: string, oldContent: string
  ) {
    const newContent = prompt("Edit your diary entry:", oldContent);
    if (!newContent || newContent.trim() === oldContent) return;

    try {
      const res = await fetch(`http://localhost:4000/diary/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ content: newContent })
      });

      if (!res.ok) throw new Error("Failed to update diary");
      await loadDiaries();
    } catch (error) {
      alert("Failed to update diary!");
      console.error(error);
    }
  }

  async function deleteDiary(id: string) {
    if (!confirm("Are you sure you want to delete this diary entry?")) return;

    try {
      const res = await fetch(`http://localhost:4000/diary/${id}`, {
        method: "DELETE"
      });

      if (!res.ok) throw new Error("Failed to delete diary");
      await loadDiaries();
    } catch (error) {
      alert("Failed to delete diary!");
      console.error(error);
    }
  }
</script>
